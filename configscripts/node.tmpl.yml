#cloud-config

---
hostname: "hostname"


write_files:
  - path: /etc/systemd/network/static.network
    permissions: '0644'
    owner: root
    content: |+
      #[Match]
      #Name=ens34
      #[Network]
      #Address=192.168.14.41/24
      #Gateway=192.168.14.1
      #netmask 255.255.255.0
      #DNS=8.8.8.8
      #DNS=8.8.4.4

  - path: /etc/environment
    permissions: '0644'
    content: |+
      #COREOS_PUBLIC_IPV4=xxxx
      #COREOS_PRIVATE_IPV4=xxx

  - path: /etc/profile.d/etcd-envvars.sh
    permissions: '0644'
    owner: root
    content: |
      #export ETCDCTL_PEERS="http://192.168.14.41:2379"
      #export FLEETCTL_ENDPOINT="http://192.168.14.41:2379"
      #export DEFAULT_IPV4=192.168.14.41

  - path: /etc/resolv.conf
    permissions: '0644'
    owner: root
    content: |
      nameserver 8.8.8.8

  - path: /etc/ntp.conf
    content: |
      # Common pool
      server 0.pool.ntp.org
      server 1.pool.ntp.org
      # - Allow only time queries, at a limited rate.
      # - Allow all local queries (IPv4, IPv6)
      restrict default nomodify nopeer noquery limited kod
      restrict 127.0.0.1
      restrict [::1]

  - path: /opt/bin/wupiao
    permissions: '0755'
    content: |
      #!/bin/bash
      # [w]ait [u]ntil [p]ort [i]s [a]ctually [o]pen
      [ -n "$1" ] && \
        until curl -o /dev/null -sIf http://${1}; do \
          sleep 1 && echo .;
        done;
      exit $?
coreos:
  update:
    group: alpha
    reboot-strategy: "reboot"
    server: https://active8.update.core-os.net/v1/update/

  fleet:
    etcd-servers: http://<master-private-ip>:2379
    metadata: "role=node"

  flannel:
    interface: ens34
    etcd-endpoints: http://<master-private-ip>:2379
    
  etcd2:
    name: etcd2.service
    mask: true
    
  units:
    - name: etcd.service
      mask: true

    - name: setup-network-environment.service
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target
        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/k8s/setup-network-environment
        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment
        RemainAfterExit=yes
        Type=oneshot

    - name: settimezone.service
      command: start
      content: |
        [Unit]
        Description=Set the timezone
        [Service]
        ExecStart=/usr/bin/timedatectl set-timezone Europe/Amsterdam
        RemainAfterExit=yes
        Type=oneshot

    - name: flanneld.service
      command: start
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Service]
            ExecStartPre=/bin/bash -c "until curl http://<master-private-ip>:2379/v2/machines; do sleep 2; done"
            ExecStartPre=/usr/bin/etcdctl --peers=http://<master-private-ip>:2379 set /coreos.com/network/config '{"Network":"10.244.0.0/16", "Backend": {"Type": "vxlan"}}'

    - name: fleet.service
      command: start
    - name: docker.service
      command: start
      drop-ins:
      - name: 51-docker-mirror.conf
        content: |
          [Unit]
          Requires=flanneld.service
          After=flanneld.service
          [Service]
          Environment=DOCKER_OPTS='--registry-mirror=http://<master-private-ip>:5000'
          ExecStartPre=/opt/bin/wupiao <master-private-ip>:5000

    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=setup-network-environment.service
        After=setup-network-environment.service
        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/v0.15.0/bin/linux/amd64/kube-proxy
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-proxy
        ExecStartPre=/opt/bin/wupiao <master-private-ip>:8080
        ExecStart=/opt/bin/kube-proxy \
        --master=<master-private-ip>:8080 \
        --logtostderr=true
        Restart=always
        RestartSec=10

    - name: kube-kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        [Service]
        EnvironmentFile=/etc/network-environment
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/v0.15.0/bin/linux/amd64/kubelet
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kubelet
        ExecStartPre=/opt/bin/wupiao <master-private-ip>:8080
        ExecStart=/opt/bin/kubelet \
          --address=0.0.0.0 \
          --port=10250 \
          --hostname_override=<public-ip> \
          --api_servers=<master-private-ip>:8080 \
          --allow_privileged=true \
          --cluster_dns=10.100.0.10 \
          --cluster_domain="k8s.local" \
          --logtostderr=true \
          --cadvisor_port=4194 \
          --healthz_bind_address=0.0.0.0 \
          --healthz_port=10248
        Restart=always
        RestartSec=10